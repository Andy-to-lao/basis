1.gdb调试 ros
   点击Debug -> open configurations -> C++(GDB/LLDB) -> default  创建launch.json文件
 方法一：
 ①launch.json中    "configurations": [  后添加如下
        
        {
        
            "name": "lidar_track",
            "type": "ros",
            "request": "launch",
            "target": "/home/aiad/lidar_perception_aiad_v3/src/lidar_euclidean_cluster/launch/lidar_euclidean_cluster.launch"
        },
  ②CMakeLists.txt  中
    add_definitions(-std=c++11 -O0 -g)
    
  然后
 方法二：
         {
            "name": "cluster",
            "type": "cppdbg",
            "request": "launch",
            "program": "${workspaceFolder}/bulid/devel/lib/depth_clustering/show_objects_node",
            "args": [
                "--num_beams 64"
            ],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        },


2.  保存自动格式化 setting 中
    Editor: Format On Save   点击√。
3. 自定义快捷键 
    Keyboard Shortcuts  Go Back  Go Foward
4.  快捷键
    行注释：Ctrl + /；
    块注释：Alt + Shit + A；
    格式化：Alt + Ctrl + i;
    行移动：Alt + ↑/↓
    代码格式化整理 ：Ctrl + Shift + I 选择配置C/C++
  
5. 插件 Bracket Pair Colorizer 用不同颜色高亮显示匹配的括号
6. 
